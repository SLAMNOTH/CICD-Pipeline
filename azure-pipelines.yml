# azure-pipelines.yml (Updated with CLI upgrade step)

trigger:
- none

variables:
  resourceGroupName: 'JUICT-HUB-SPOKE-PROD'
  location: 'westeurope'
  bicepTemplateFile: './main.bicep'
  bicepParameterFile: './main.bicepparam'
  azureServiceConnection: 'azure-connection'

stages:

- stage: Validate
  displayName: 'Fase 1: Valideer Bicep & Beveiliging'
  jobs:
  - job: ValidateCode
    displayName: 'Valideer Code Kwaliteit'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Valideer Bicep syntax (bicep build)'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az bicep build --file $(bicepTemplateFile)'
    - task: MicrosoftSecurityDevOps@1
      displayName: 'Voer Microsoft Security DevOps-analyse uit'

- stage: Test
  displayName: 'Fase 2: Test Infrastructuur (What-If)'
  dependsOn: Validate
  condition: succeeded()
  jobs:
  - job: WhatIfDeployment
    displayName: 'Voorbeeld van uitrol met What-If'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # --- NIEUWE STAP TOEGEVOEGD ---
    - task: AzureCLI@2
      displayName: 'Upgrade Azure CLI naar de laatste versie'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Upgraden van Azure CLI..."
          az upgrade --yes
          echo "Azure CLI versie na upgrade:"
          az --version
    # --- EINDE NIEUWE STAP ---

    - task: AzureCLI@2
      displayName: 'Voer What-If uitrol uit'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Simuleren van de uitrol om wijzigingen te bekijken..."
          az deployment group what-if \
            --resource-group $(resourceGroupName) \
            --template-file $(bicepTemplateFile) \
            --parameters $(bicepParameterFile) \
            --parameters adminPassword=$(adminPassword)

- stage: Deploy
  displayName: 'Fase 3: Rol Infrastructuur Uit'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - deployment: DeployInfrastructure
    displayName: 'Uitrol van Hub-en-Spoke Architectuur'
    pool:
      vmImage: 'ubuntu-latest'
    # Gebruik een 'environment' om handmatige goedkeuringen in te stellen voor productie.
    environment: 'production' 
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            displayName: 'Rol Bicep-template uit naar Azure'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Starten van de uitrol van de hub-en-spoke infrastructuur..."
                az deployment group create \
                  --name "pipeline-deployment-$(Build.BuildId)" \
                  --resource-group $(resourceGroupName) \
                  --template-file $(bicepTemplateFile) \
                  --parameters $(bicepParameterFile) \
                  --parameters adminPassword=$(adminPassword) # Geef het geheime wachtwoord door
