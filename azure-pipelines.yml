# azure-pipelines.yml (Updated with CLI upgrade step)

trigger:
- none

variables:
  resourceGroupName: 'JUICT-HUB-SPOKE-PROD'
  location: 'westeurope'
  bicepTemplateFile: './main.bicep'
  azureServiceConnection: 'azure-connection'

stages:

- stage: Validate
  displayName: 'Fase 1: Valideer Bicep & Beveiliging'
  jobs:
  - job: ValidateCode
    displayName: 'Valideer Code Kwaliteit'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Valideer Bicep syntax (bicep build)'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az bicep build --file $(bicepTemplateFile)'
    - task: MicrosoftSecurityDevOps@1
      displayName: 'Voer Microsoft Security DevOps-analyse uit'

- stage: Test
  displayName: 'Fase 2: Test Infrastructuur (What-If met PowerShell)'
  dependsOn: Validate
  condition: succeeded()
  jobs:
  - job: WhatIfDeployment
    displayName: 'Voorbeeld van uitrol met PowerShell What-If'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzurePowerShell@5
      displayName: 'Maak resourcegroep aan als deze niet bestaat'
      inputs:
        azureSubscription: $(azureServiceConnection)
        ScriptType: 'InlineScript'
        Inline: |
          if (-not (Get-AzResourceGroup -Name "$(resourceGroupName)" -ErrorAction SilentlyContinue)) {
            Write-Host "Resourcegroep '$(resourceGroupName)' bestaat niet. Bezig met aanmaken..."
            New-AzResourceGroup -Name "$(resourceGroupName)" -Location "$(location)"
          } else {
            Write-Host "Resourcegroep '$(resourceGroupName)' bestaat al."
          }
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
    - task: AzurePowerShell@5
      displayName: 'Voer What-If uitrol uit met PowerShell'
      inputs:
        azureSubscription: $(azureServiceConnection)
        ScriptType: 'InlineScript'
        Inline: |
          $templateParameters = @{
            "location"      = "$(location)"
            "vmName"        = "win-vm-workload-01"
            "adminUsername" = "azureuser"
            "adminPassword" = "$(adminPassword)"
          }
          $whatIfResult = Get-AzResourceGroupDeploymentWhatIfResult -ResourceGroupName "$(resourceGroupName)" -TemplateFile "$(bicepTemplateFile)" -TemplateParameterObject $templateParameters
          if ($whatIfResult.Changes) {
            Write-Host "Gedetecteerde wijzigingen:"
            $whatIfResult.Changes | ConvertTo-Json -Depth 5 | Write-Output
          } else {
            Write-Host "What-If is succesvol uitgevoerd. Er zijn geen wijzigingen gedetecteerd."
          }
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true

- stage: Deploy
  displayName: 'Fase 3: Rol Infrastructuur Uit'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - deployment: DeployInfrastructure
    displayName: 'Uitrol van Hub-en-Spoke Architectuur'
    environment: 'production' 
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          # --- DEZE STAP IS CRUCIAAL EN TOEGEVOEGD ---
          - checkout: self
          
          - task: AzureCLI@2
            displayName: 'Rol Bicep-template uit naar Azure'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Starten van de uitrol van de hub-en-spoke infrastructuur..."
                az deployment group create \
                  --name "pipeline-deployment-$(Build.BuildId)" \
                  --resource-group $(resourceGroupName) \
                  --template-file $(bicepTemplateFile) \
                  --parameters location=$(location) vmName='win-vm-workload-01' adminUsername='azureuser' adminPassword=$(adminPassword)